name: .NET

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test:
    name: "build and test (os: ${{ matrix.os }})"
    env:
      PROJECT_NAME: Starter.API
      CLOUDFLARE_PROJECT_NAME: netcore-webapi-starter-livingdoc
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Get short commit hash
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ env.PROJECT_NAME }}-Release-${{ matrix.os }}-${{ steps.vars.outputs.sha_short }}
          path: ${{ env.PROJECT_NAME }}/bin/Release/net6.0/**
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release --logger "trx;LogFileName=test-results.trx"
      - name: Upload test results artifact
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ env.PROJECT_NAME }}.Tests-${{ matrix.os }}-${{ steps.vars.outputs.sha_short }}
          path: ${{ env.PROJECT_NAME }}.Tests/TestResults/test-results.trx
      - name: Generate LivingDoc
        run: dotnet livingdoc feature-folder ${{ env.PROJECT_NAME }}.Tests/ -t ${{ env.PROJECT_NAME }}.Tests/bin/Release/net6.0/TestExecution.json
      - name: Upload LivingDoc artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PROJECT_NAME }}.Tests-LivingDoc-${{ matrix.os }}-${{ steps.vars.outputs.sha_short }}
          path: LivingDoc.html
      - name: Move LivingDoc to output directory
        id: livingdoc-output
        run: |
          LD_TMP_DIR=$(mktemp -d)
          mv LivingDoc.html $LD_TMP_DIR/index.html
          echo "::set-output name=tmp_dir::$LD_TMP_DIR"
      - name: Publish to Cloudflare Pages
        if: github.event_name != 'pull_request' || (github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork)
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ env.CLOUDFLARE_PROJECT_NAME }}
          directory: ${{ steps.vars.livingdoc-output.tmp_dir }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
